{
  "swagger": "2.0",
  "info": {
    "title": "Bookflow API",
    "description": "API for managing bookflow operations",
    "version": "1.0.0"
  },
  "host": "bookflow-api-fgiu.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "Operations related to user authentication and session management"
    },
    {
      "name": "Books",
      "description": "Operations related to books"
    },
    {
      "name": "Authors",
      "description": "Operations related to authors"
    },
    {
      "name": "Users",
      "description": "Operations related to users"
    },
    {
      "name": "Loans",
      "description": "Operations related to loans"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "cookieAuth": {
      "type": "apiKey",
      "name": "Cookie",
      "in": "header",
      "description": "Session authentication is handled by cookies. After login, your browser will automatically send the session cookie. No need to manually provide a token here."
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Creates a new user account and automatically logs them in, establishing a session. No token is returned; a session cookie is set.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object for registration",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Jane"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "example": "1995-10-20"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "jane.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "StrongPass123"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "user",
                    "admin"
                  ],
                  "example": "user"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+1234567890"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "birthday",
                "email",
                "password",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered and logged in successfully (session cookie set)",
            "schema": {
              "$ref": "#/definitions/UserAuthResponse"
            }
          },
          "400": {
            "description": "Bad Request / User already exists"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate user and establish session",
        "description": "Logs in a user with email and password. A session cookie is set upon successful authentication; no token is returned.",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User credentials (email and password)",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "jane.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "StrongPass123"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful (session cookie set)",
            "schema": {
              "$ref": "#/definitions/UserAuthResponse"
            }
          },
          "401": {
            "description": "Unauthorized / Invalid credentials"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout user and destroy session",
        "description": "Destroys the current user session and clears the session cookie. Requires an active session.",
        "responses": {
          "200": {
            "description": "Logged out successfully."
          },
          "500": {
            "description": "Could not log out, please try again."
          }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get user profile",
        "description": "Retrieves the profile information of the authenticated user. Requires an active session.",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "schema": {
              "$ref": "#/definitions/UserProfileResponse"
            }
          },
          "401": {
            "description": "Not authenticated."
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve all users",
        "description": "Retrieves a list of all users. Requires active session and admin role.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user (Admin Only)",
        "description": "Creates a new user account via admin panel. Requires active session and admin role.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Enter First Name"
                },
                "lastName": {
                  "type": "string",
                  "example": "Enter Last Name"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "example": "1999-01-01"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "Enter Email"
                },
                "password": {
                  "type": "string",
                  "example": "Enter Password"
                },
                "role": {
                  "type": "string",
                  "example": "user"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+1234567890"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "birthday",
                "email",
                "password",
                "role",
                "phoneNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a user by ID",
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user by ID",
        "description": "Updates a user by ID. Requires active session.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to update"
          },
          {
            "name": "user_data",
            "in": "body",
            "description": "User object to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Updated First Name"
                },
                "lastName": {
                  "type": "string",
                  "example": "Updated Last Name"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "example": "1999-01-01"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "Updated Email"
                },
                "password": {
                  "type": "string",
                  "example": "Updated Password"
                },
                "role": {
                  "type": "string",
                  "example": "user"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+1234567890"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "birthday",
                "email",
                "password",
                "role",
                "phoneNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user by ID (Admin Only)",
        "description": "Deletes a user by ID. Requires active session and admin role.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Retrieve all books",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "description": "Creates a new book. Requires active session and admin role.",
        "parameters": [
          {
            "name": "book",
            "in": "body",
            "description": "Book object to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "book_name": {
                  "type": "string",
                  "example": "Enter Book Name"
                },
                "book_author": {
                  "type": "string",
                  "example": "Author Name"
                },
                "book_genre": {
                  "type": "string",
                  "example": "Genre"
                },
                "book_summary": {
                  "type": "string",
                  "example": "Add a summary for the book"
                },
                "book_published": {
                  "type": "number",
                  "example": 2023
                },
                "book_isbn": {
                  "type": "string",
                  "example": "Enter the ISBN number"
                },
                "book_pages": {
                  "type": "number",
                  "example": 100
                }
              },
              "required": [
                "book_name",
                "book_author",
                "book_genre",
                "book_summary",
                "book_published",
                "book_isbn",
                "book_pages"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/books/{book_id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Retrieve a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the book to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update a book by ID",
        "description": "Updates a book by ID. Requires active session and admin role.",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the book to update"
          },
          {
            "name": "book_data",
            "in": "body",
            "description": "Book object to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "book_name": {
                  "type": "string",
                  "example": "Updated Book Name"
                },
                "book_author": {
                  "type": "string",
                  "example": "Updated Author"
                },
                "book_genre": {
                  "type": "string",
                  "example": "Updated Genre"
                },
                "book_summary": {
                  "type": "string",
                  "example": "Updated summary for the book."
                },
                "book_published": {
                  "type": "number",
                  "example": 2025
                },
                "book_isbn": {
                  "type": "string",
                  "example": "updatedisbn123456"
                },
                "book_pages": {
                  "type": "number",
                  "example": 600
                }
              },
              "required": [
                "book_name",
                "book_author",
                "book_genre",
                "book_summary",
                "book_published",
                "book_isbn",
                "book_pages"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book by ID",
        "description": "Deletes a book by ID. Requires active session and admin role.",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the book to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authors": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Retrieve all authors",
        "description": "Retrieve all authors",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Authors"
        ],
        "summary": "Create a new author",
        "description": "Creates a new author. Requires active session and admin role.",
        "parameters": [
          {
            "name": "author",
            "in": "body",
            "description": "Author object to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "author_first_name": {
                  "type": "string",
                  "example": "John"
                },
                "author_last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "author_birthdate": {
                  "type": "string",
                  "format": "date",
                  "example": "1980-01-01"
                },
                "author_nationality": {
                  "type": "string",
                  "example": "American"
                },
                "author_awards": {
                  "type": "array",
                  "example": [
                    "Best Author 2020"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "author_books": {
                  "type": "array",
                  "example": [
                    "60d5ec49f1c7d23a6c8e4f1a"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "author_genres": {
                  "type": "array",
                  "example": [
                    "Fiction",
                    "Mystery"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "author_first_name",
                "author_last_name",
                "author_birthdate",
                "author_nationality",
                "author_awards",
                "author_books",
                "author_genres"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authors/{author_id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Retrieve an author by ID",
        "description": "",
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the author to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "summary": "Update an author by ID",
        "description": "Updates an author by ID. Requires active session and admin role.",
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the author to update"
          },
          {
            "name": "author_data",
            "in": "body",
            "description": "Author object to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "author_first_name": {
                  "type": "string",
                  "example": "Updated First Name"
                },
                "author_last_name": {
                  "type": "string",
                  "example": "Updated Last Name"
                },
                "author_birthdate": {
                  "type": "string",
                  "format": "date",
                  "example": "1985-01-01"
                },
                "author_nationality": {
                  "type": "string",
                  "example": "British"
                },
                "author_awards": {
                  "type": "array",
                  "example": [
                    "Best Author 2021"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "author_books": {
                  "type": "array",
                  "example": [
                    "60d5ec49f1c7d23a6c8e4f1b"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "author_genres": {
                  "type": "array",
                  "example": [
                    "Non-Fiction",
                    "Science"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "author_first_name",
                "author_last_name",
                "author_birthdate",
                "author_nationality",
                "author_awards",
                "author_books",
                "author_genres"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "summary": "Delete an author by ID",
        "description": "Deletes an author by ID. Requires active session and admin role.",
        "parameters": [
          {
            "name": "author_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the author to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (Admin role required)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/loans": {
      "get": {
        "tags": [
          "Loans"
        ],
        "summary": "Retrieve all loans",
        "description": "Retrieves all loans. Requires active session.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (if role-based access is applied)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Loans"
        ],
        "summary": "Create a new loan",
        "description": "Creates a new loan. Requires active session.",
        "parameters": [
          {
            "name": "loan",
            "in": "body",
            "description": "Loan object to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "Enter User ID"
                },
                "book_id": {
                  "type": "string",
                  "example": "Enter Book ID"
                },
                "loanDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-01-01"
                },
                "dueDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-02-01"
                },
                "returnDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-03-01"
                },
                "status": {
                  "type": "string",
                  "example": "active"
                }
              },
              "required": [
                "user_id",
                "book_id",
                "loanDate",
                "dueDate",
                "returnDate",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (if role-based access is applied)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/loans/{loan_id}": {
      "get": {
        "tags": [
          "Loans"
        ],
        "summary": "Retrieve a loan by ID",
        "description": "Retrieves a loan by ID. Requires active session.",
        "parameters": [
          {
            "name": "loan_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the loan to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (if role-based access is applied)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Loans"
        ],
        "summary": "Update a loan by ID",
        "description": "Updates a loan by ID. Requires active session.",
        "parameters": [
          {
            "name": "loan_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the loan to update"
          },
          {
            "name": "loan_data",
            "in": "body",
            "description": "Loan object to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "Updated User ID"
                },
                "book_id": {
                  "type": "string",
                  "example": "Updated Book ID"
                },
                "loanDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-01-01"
                },
                "dueDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-02-01"
                },
                "returnDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-03-01"
                },
                "status": {
                  "type": "string",
                  "example": "returned"
                }
              },
              "required": [
                "user_id",
                "book_id",
                "loanDate",
                "dueDate",
                "returnDate",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (if role-based access is applied)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Loans"
        ],
        "summary": "Delete a loan by ID",
        "description": "Deletes a loan by ID. Requires active session and admin role.",
        "parameters": [
          {
            "name": "loan_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the loan to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized (No active session)"
          },
          "403": {
            "description": "Forbidden (if role-based access is applied)"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "UserAuthResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "60d5ec49f1c7d23a6c8e4f1e"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@email.com"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "message": {
          "type": "string",
          "example": "User registered and logged in successfully."
        }
      }
    },
    "UserProfileResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "60d5ec49f1c7d23a6c8e4f1e"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@email.com"
        },
        "role": {
          "type": "string",
          "example": "user"
        }
      }
    }
  }
}